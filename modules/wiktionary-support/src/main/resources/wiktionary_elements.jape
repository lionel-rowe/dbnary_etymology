/*
* Blexisma Wiktionary Extractor
*
*/

Phase:	markup
Input: Token  
Options: control = appelt

// TODO: Copy all Token as PlainTextTokens/IgnorableTextTokens, except macros (?), links (only keep the addition if available)

Macro: CREATE_MACRO_ANNOTATION  
:macro
{
    try {
      gate.AnnotationSet mnameAnnSet = (gate.AnnotationSet)bindings.get("mname");
      String mname = "";
      if (mnameAnnSet != null && mnameAnnSet.size() != 0) {
        mname = doc.getContent().getContent(mnameAnnSet.firstNode().getOffset(),mnameAnnSet.lastNode().getOffset()).toString();
      }
      gate.FeatureMap features = Factory.newFeatureMap();
      features.put("name", mname);
      gate.AnnotationSet addsAnnSet = (gate.AnnotationSet)bindings.get("adds");
      if (addsAnnSet != null && addsAnnSet.size() != 0) {
        String adds = doc.getContent().getContent(addsAnnSet.firstNode().getOffset(),addsAnnSet.lastNode().getOffset()).toString();
        features.put("additions", adds);
      }
      gate.AnnotationSet macroAnnSet = (gate.AnnotationSet)bindings.get("macro");
      gate.Annotation openItem = (gate.Annotation)macroAnnSet.iterator().next();
      if (openItem.getType().equals("Token") &&
          openItem.getFeatures().containsKey("kind") &&
          openItem.getFeatures().get("kind").equals("wolink")) {
         features.put("kind", "wlink");
      } else {
         features.put("kind", "wmacro");
      }
      outputAS.add(macroAnnSet.firstNode().getOffset(), macroAnnSet.lastNode().getOffset(), "WMacro", features);
    } catch (Exception e) {
      e.printStackTrace();
    }
}  

Rule: LanguageMacro
(
  {Token.kind == "womacro"} 
  {Token.string == "="} 
  ({Token.kind == "word"}):lang
  {Token.string == "="} 
  {Token.kind == "wcmacro"}  
)
:macro
-->
:macro.WMacro = {kind = "language", lang=:lang.Token.string}

Rule: WiktionaryMacro
(
  {Token.kind == "womacro"} 
  ({Token.string == "-"})? 
  ({Token.string != "-" , Token.kind != "wcmacro", Token.string != "|"})+:mname
  ({Token.string == "-"})? 
  ( {Token.string == "|"} ({Token.kind != wcmacro})+:adds)?
  {Token.kind == "wcmacro"}  
)
:macro
--> CREATE_MACRO_ANNOTATION


Rule: WiktionaryLink
(
  {Token.kind == "wolink"} 
  ({Token.string != "-" , Token.kind != "wclink", Token.string != "|"})+:mname
  ( {Token.string == "|"} ({Token.kind != wclink})+:adds)?
  {Token.kind == "wclink"}  
)
:macro
-->
CREATE_MACRO_ANNOTATION

Rule: WiktionaryBoxSeparation
(
  {Token.kind == "womacro"} 
  {Token.string == "-"} 
  {Token.kind == "wcmacro"}  
)
:macro
-->
:macro.WMacro = {kind = "wmacro", name="-"}

